#
# GtkMoo
# The Game of Bulls n Cows written in C using Gtk+. 
#
# Author: Rohit Yadav <rohityadav89 AT gmail.com>
#

# Project Version
SET(CPACK_PACKAGE_VERSION_MAJOR "2")
SET(CPACK_PACKAGE_VERSION_MINOR "0")
SET(COMPLETE_VERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR})

# Project Info
SET(PROJECT_NAME_SHORT   "GtkMoo")
SET(PROJECT_NAME_LONG    "GtkMoo Game")
SET(PROJECT_DESCRIPTION  "The Game of Bulls n Cows written in C using Gtk+.")
SET(PROJECT_COPYRIGHT    "Copyright (C) 2008-2010 Rohit Yadav")
SET(PROJECT_CONTACT      "rohityadav89@gmail.com")
SET(PROJECT_VENDOR       "Rohit Yadav")
SET(ORG_WEBSITE          "http://gtk-moo.sourceforge.net")

# Configuring build type
IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Debug" CACHE STRING
        "Choose the type of build, options are: None Debug Release."
        FORCE)
    MESSAGE("Setting build type to '${CMAKE_BUILD_TYPE}'")
ELSE(NOT CMAKE_BUILD_TYPE)
    MESSAGE("Build type set to '${CMAKE_BUILD_TYPE}'")
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(WIN32)
    # Building in release for WIN32
    SET(CMAKE_BUILD_TYPE "Release")
    SET_PROPERTY(DIRECTORY APPEND PROPERTY COMPILE_DEFINITIONS_RELEASE QT_NO_DEBUG)
    # Use mingw's sprintf instead of windows's
    ADD_DEFINITIONS( -D__USE_MINGW_ANSI_STDIO=1 )
ENDIF(WIN32)

# Project Version
SET(CPACK_PACKAGE_VERSION_MAJOR "2")
SET(CPACK_PACKAGE_VERSION_MINOR "0")
SET(CPACK_PACKAGE_VERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR})
SET(PROJECT_VERSION_MAJOR ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR})
SET(PROJECT_VERSION ${CPACK_PACKAGE_VERSION})

MESSAGE(STATUS "GtkMoo Version: ${PROJECT_VERSION}")

STRING(TOLOWER ${PROJECT_NAME_SHORT} PROJECT_NAME_SHORT_LOWER)
PROJECT(${PROJECT_NAME_SHORT_LOWER}-${PROJECT_VERSION})

# CMake Settings
CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0)
SET(CMAKE_COLOR_MAKEFILE ON)
SET(CMAKE_VERBOSE_MAKEFILE OFF)

# Set path to additional CMake modules
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})

# Path to contribs
SET(CONTRIBS_PATH ${CMAKE_CURRENT_SOURCE_DIR}/contribs)

# On Mac OS build a universal 'release' binary
IF(APPLE)
    SET(CMAKE_BUILD_TYPE "Release")
    SET(CMAKE_OSX_ARCHITECTURES i386)
ENDIF(APPLE)

# Search and include Gtk+
FIND_PACKAGE(PkgConfig)
PKG_CHECK_MODULES(GOBJECT REQUIRED gobject-2.0)
PKG_CHECK_MODULES(GIO REQUIRED gio-2.0)
PKG_CHECK_MODULES(GTK REQUIRED gtk+-2.0)
PKG_CHECK_MODULES(GTHREAD REQUIRED gthread-2.0)

SET(CFLAGS
	${GOBJECT_CFLAGS} ${GOBJECT_CFLAGS_OTHER}
	${GIO_CFLAGS} ${GIO_CFLAGS_OTHER}
	${GTK_CFLAGS} ${GTK_CFLAGS_OTHER}
	${GTHREAD_CFLAGS} ${GTHREAD_CFLAGS_OTHER}
)
ADD_DEFINITIONS(${CFLAGS})

SET(LIBS
	${GOBJECT_LIBRARIES}
	${GIO_LIBRARIES}
	${GTK_LIBRARIES}
	${GTHREAD_LIBRARIES}
)
LINK_LIBRARIES(${LIBS})

SET(LIB_PATHS
	${GOBJECT_LIBRARY_DIRS}
	${GIO_LIBRARY_DIRS}
	${GTK_LIBRARY_DIRS}
	${GTHREAD_LIBRARY_DIRS}
)
LINK_DIRECTORIES(${LIB_PATHS})

# Copy the sh launcher
IF(NOT WIN32)
    CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/cmake/gtkmoo.sh" "${CMAKE_CURRENT_BINARY_DIR}/gtkmoo" COPYONLY)
ENDIF(NOT WIN32)

# Layout of CMakeQt installation
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set common dirs for MAC and UNIX
SET (DEFAULT_BIN_SUBDIR     bin)
SET (DEFAULT_LIB_SUBDIR     lib)
SET (DEFAULT_DATA_SUBDIR    share)
SET (DEFAULT_SRC_SUBDIR     src)
SET (DEFAULT_INCLUDE_SUBDIR include)

# Set CMAKEQT path params
SET (GTKMOO_BIN_SUBDIR     "${DEFAULT_BIN_SUBDIR}"        CACHE STRING "Subdirectory where executables will be installed")
SET (GTKMOO_LIB_SUBDIR     "${DEFAULT_LIB_SUBDIR}"        CACHE STRING "Subdirectory where libraries will be installed")
SET (GTKMOO_DATA_SUBDIR    "${DEFAULT_DATA_SUBDIR}"       CACHE STRING "Subdirectory where data will be installed")
SET (GTKMOO_SRC_SUBDIR     "${DEFAULT_SRC_SUBDIR}"        CACHE STRING "Subdirectory where source is")
SET (GTKMOO_INCLUDE_SUBDIR "${DEFAULT_INCLUDE_SUBDIR}"    CACHE STRING "Subdirectory where header files will be installed")

# full paths for the installation
SET (GTKMOO_BIN_DIR     ${CMAKE_INSTALL_PREFIX}/${GTKMOO_BIN_SUBDIR})
SET (GTKMOO_LIB_DIR     ${CMAKE_INSTALL_PREFIX}/${GTKMOO_LIB_SUBDIR})
SET (GTKMOO_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/${GTKMOO_INCLUDE_SUBDIR})
SET (GTKMOO_DATA_DIR    ${CMAKE_INSTALL_PREFIX}/${GTKMOO_DATA_SUBDIR}/cmakeqt/)
SET (GTKMOO_DOC_DIR     ${CMAKE_INSTALL_PREFIX}/${GTKMOO_DATA_SUBDIR}/doc/cmakeqt/)
SET (GTKMOO_EFFECTS_DIR ${CMAKE_INSTALL_PREFIX}/${GTKMOO_LIB_SUBDIR}/cmakeqt/effects/)
SET (GTKMOO_DESKTOP_DIR ${CMAKE_INSTALL_PREFIX}/${GTKMOO_DATA_SUBDIR}/applications/)
SET (GTKMOO_PIXMAPS_DIR ${CMAKE_INSTALL_PREFIX}/${GTKMOO_DATA_SUBDIR}/pixmaps/)

# Recursively add sub dirs
SUBDIRS(src)
SUBDIRS(nsis)

# Copy stuff to doc subdirectory
INSTALL (FILES AUTHORS COPYING NEWS README
         DESTINATION ${GTKMOO_DOC_DIR})

# Copy .desktop file
INSTALL (FILES share/gtkmoo.desktop DESTINATION ${GTKMOO_DESKTOP_DIR})

# Copy the CMAKEQT pixmap
INSTALL (FILES share/gtkmoo.png DESTINATION ${GTKMOO_PIXMAPS_DIR})

#############################################################
# Enable packaging

INCLUDE(InstallRequiredSystemLibraries)

SET(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_NAME})
SET(CPACK_PACKAGE_NAME ${PROJECT_NAME_SHORT})
SET(CPACK_PACKAGE_DESCRIPTION "${PROJECT_NAME_SHORT} \n ${PROJECT_DESCRIPTION}")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "${PROJECT_NAME_SHORT} \n ${PROJECT_DESCRIPTION}")
SET(CPACK_PACKAGE_VENDOR ${PROJECT_VENDOR})
SET(CPACK_PACKAGE_CONTACT ${PROJECT_CONTACT})
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/README")
SET(CPACK_RESOURCE_FILE_README ${CMAKE_SOURCE_DIR}/README)
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING")
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")

# Force Package Name
SET(CPACK_PACKAGE_FILE_NAME ${PROJECT_NAME}-${CPACK_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR})

# NSIS Windows installer
IF(WIN32 AND NOT UNIX)
    # There is a bug in NSI that does not handle full unix paths properly. Make
    # sure there is at least one set of four (4) backslashes.
    SET(CPACK_PACKAGE_ICON "${CMAKE_SOURCE_DIR}/share\\\\gtkmoo.png")
    SET(CPACK_NSIS_INSTALLED_ICON_NAME "\\\\gtkmoo.exe")
    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} GTKMOO")
    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\gtk-moo.sourceforge.net")
    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\rohityadav.in")
    SET(CPACK_NSIS_CONTACT "rohityadav89 AT gmail.com")
    SET(CPACK_NSIS_MODIFY_PATH ON)
ENDIF(WIN32 AND NOT UNIX)

# RPM packages
INCLUDE(${CMAKE_MODULE_PATH}/RpmBuild.cmake)
IF(RPMBUILD_FOUND AND NOT WIN32)
    SET(CPACK_GENERATOR "RPM")
    SET(CPACK_SET_DESTDIR TRUE)
ENDIF(RPMBUILD_FOUND AND NOT WIN32)

# Debian packages
INCLUDE (${CMAKE_MODULE_PATH}/DpkgBuild.cmake)
IF(DPKG_FOUND AND NOT WIN32)
    SET(CPACK_GENERATOR "DEB")
    SET(CPACK_DEBIAN_PACKAGE_DESCRIPTION ${CPACK_PACKAGE_DESCRIPTION})
    SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY ${CPACK_PACKAGE_DESCRIPTION_SUMMARY})
    SET(CPACK_SET_DESTDIR TRUE)
    SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libgtk2.0-bin  ( >= 1.9 )")
ENDIF(DPKG_FOUND AND NOT WIN32)

# Mac App Bundle
IF(APPLE)
    SET(CPACK_GENERATOR "DragNDrop")
    SET(CPACK_PACKAGE_FILE_NAME "GtkMoo")
    # Libraries are bundled directly
    SET(CPACK_COMPONENT_LIBRARIES_HIDDEN TRUE)
    # Bundle Properties
    SET(MACOSX_BUNDLE_BUNDLE_NAME gtkmoo)
    SET(MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION})
    SET(MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION})
    SET(MACOSX_BUNDLE_LONG_VERSION_STRING "Version ${PROJECT_VERSION}")
ENDIF(APPLE)

SET(CPACK_PACKAGE_EXECUTABLES "gtkmoo" "GTKMOO")
INCLUDE(CPack)
